<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:p="http://www.springframework.org/schema/p" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
                        http://cxf.apache.org/jaxws       
                        http://cxf.apache.org/schemas/jaxws.xsd"
  default-lazy-init=" false ">

  <context:component-scan base-package="com.gome.storefeedback.*">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
  </context:component-scan>
  <context:annotation-config />

  <bean class="com.gome.storefeedback.common.CustomizedPropertyPlaceholderConfigurer">
    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
    <property name="ignoreResourceNotFound" value="true" />
    <property name="locations">
      <list>
        <value>classpath*:/*.properties</value>
      </list>
    </property>
  </bean>

  <bean class="com.gome.storefeedback.common.ApplicationContextProvider" />

	<!-- 
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName">
			<value>java:comp/env/jdbc/storefeedback</value>
		</property> 
	</bean> 
	-->
    <!-- 引入security -->
  <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder">
    <constructor-arg>
      <value>MD5</value>
    </constructor-arg>
    <property name="encodeHashAsBase64" value="true" />
  </bean>

  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="${jdbc.mysql.driver}" />
    <property name="jdbcUrl" value="${jdbc.mysql.url}" />
    <property name="user" value="${jdbc.mysql.user}" />
    <property name="password" value="${jdbc.mysql.password}" />
    <property name="minPoolSize">
      <value>1</value>
    </property>
    <property name="maxPoolSize">
      <value>10</value>
    </property>
    <property name="maxIdleTime">
      <value>1800</value>
    </property>
    <property name="acquireIncrement">
      <value>2</value>
    </property>
    <property name="maxStatements">
      <value>0</value>
    </property>
    <property name="initialPoolSize">
      <value>2</value>
    </property>
    <property name="idleConnectionTestPeriod">
      <value>1800</value>
    </property>
    <property name="acquireRetryAttempts">
      <value>120</value>
    </property>
    <property name="breakAfterAcquireFailure">
      <value>false</value>
    </property>
  </bean>



  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="mapperLocations">
      <list>
        <value>classpath:mybatis/mapper/*Mapper.xml</value>
      </list>
    </property>
    <property name="dataSource" ref="dataSource" />
    <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
  </bean>


  <bean id="baseDao" class="com.gome.storefeedback.dao.common.BaseDaoImpl">
    <property name="sqlSessionFactory" ref="sqlSessionFactory" />
  </bean>


  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="find*" propagation="REQUIRED" read-only="true" />
      <tx:method name="list*" propagation="REQUIRED" read-only="true" />
      <tx:method name="get*" propagation="REQUIRED" read-only="true" />
      <tx:method name="delete*" propagation="REQUIRED" rollback-for="com.gome.storefeedback.exception.BaseException" />
      <tx:method name="add*" propagation="REQUIRED" rollback-for="com.gome.storefeedback.exception.BaseException" />
      <tx:method name="insert*" propagation="REQUIRED" rollback-for="com.gome.storefeedback.exception.BaseException" />
      <tx:method name="batch*" propagation="REQUIRED" rollback-for="com.gome.storefeedback.exception.BaseException" />
      <tx:method name="update*" propagation="REQUIRED" rollback-for="com.gome.storefeedback.exception.BaseException" />
      <tx:method name="modify*" propagation="REQUIRED" rollback-for="com.gome.storefeedback.exception.BaseException" />
      <tx:method name="trans*" propagation="REQUIRED" rollback-for="com.gome.storefeedback.exception.BaseException" />
      <tx:method name="app*" propagation="REQUIRED" rollback-for="com.gome.storefeedback.exception.BaseException" />
    </tx:attributes>
  </tx:advice>

  <aop:config>
    <aop:pointcut id="basService" expression="execution (* com.gome.storefeedback.service.*.*.*(..))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="basService" />
  </aop:config>

  <import resource="jms.xml" />
<!--    <import resource="quartz.xml" /> 
 --></beans>