<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Mapper.GoodsCategory">
  <resultMap id="BaseResultMap" type="com.gome.storefeedback.entity.GoodsCategory">
    <id column="class_code" property="classCode" jdbcType="VARCHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="class_level" property="classLevel" jdbcType="VARCHAR" />
    <result column="parent_class_code" property="parentClassCode" jdbcType="VARCHAR" />
    <result column="is_leaf" property="isLeaf" jdbcType="TINYINT" />
    <result column="division_code" property="divisionCode" jdbcType="VARCHAR" />
    <result column="division_name" property="divisionName" jdbcType="VARCHAR" />
    <result column="update_flag" property="updateFlag" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List">
    class_code, class_name, class_level, parent_class_code, is_leaf, division_code, division_name,
    update_flag, create_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from goods_category
    where class_code = #{classCode,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from goods_category
    where class_code =
    #{classCode,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.gome.storefeedback.entity.GoodsCategory">
    insert into goods_category
    ( class_code, class_name, class_level,
    parent_class_code, is_leaf, division_code,
    division_name, update_flag, create_time
    ) values
    (#{classCode,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR}, #{classLevel,jdbcType=VARCHAR},
    #{parentClassCode,jdbcType=VARCHAR}, #{isLeaf,jdbcType=TINYINT}, #{divisionCode,jdbcType=VARCHAR},
    #{divisionName,jdbcType=VARCHAR}, #{updateFlag,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <!-- 批量插入 -->
  <insert id="insertBatch" parameterType="list">
    insert into goods_category (
    <include refid="Base_Column_List" />
    )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.classCode,jdbcType=VARCHAR},
      #{item.className,jdbcType=VARCHAR}, #{item.classLevel,jdbcType=VARCHAR},
      #{item.parentClassCode,jdbcType=VARCHAR},
      #{item.isLeaf,jdbcType=TINYINT}, #{item.divisionCode,jdbcType=VARCHAR},
      #{item.divisionName,jdbcType=VARCHAR},
      #{item.updateFlag,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <update id="update" parameterType="com.gome.storefeedback.entity.GoodsCategory">
    update goods_category
    <set>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="classLevel != null">
        class_level = #{classLevel,jdbcType=VARCHAR},
      </if>
      <if test="parentClassCode != null">
        parent_class_code = #{parentClassCode,jdbcType=VARCHAR},
      </if>
      <if test="isLeaf != null">
        is_leaf = #{isLeaf,jdbcType=TINYINT},
      </if>
      <if test="divisionCode != null">
        division_code = #{divisionCode,jdbcType=VARCHAR},
      </if>
      <if test="divisionName != null">
        division_name = #{divisionName,jdbcType=VARCHAR},
      </if>
      <if test="updateFlag != null">
        update_flag = #{updateFlag,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where class_code = #{classCode,jdbcType=VARCHAR}
  </update>

  <select id="list" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from goods_category
    <where>
      <if test="null != classCode and '' != classCode"> class_code = #{classCode}</if>
      <if test="null != classLevel and '' != classLevel">and class_level = #{classLevel}</if>
      <if test="null != parentClassCode and '' != parentClassCode">and parent_class_code = #{parentClassCode}</if>
      <if test="null != className and '' != className">and class_name like "%"#{className,jdbcType=VARCHAR}"%"</if>
<!--       
      <if test="null != divisionCode and '' != divisionCode">and division_code = #{divisionCode}</if>
      <if test="null != updateFlag and '' != updateFlag">and update_flag = #{updateFlag}</if> -->
    </where>
  </select>

  <select id="applist" parameterType="map" resultType="map">
    select class_code keyValue, class_name keyName
    from goods_category
    <where>
      <if test="null != classCode and '' != classCode"> class_code = #{classCode}</if>
      <if test="null != classLevel and '' != classLevel">and class_level = #{classLevel}</if>
      <if test="null != parentClassCode and '' != parentClassCode">and parent_class_code = #{parentClassCode}</if>
      <if test="null != divisionCode and '' != divisionCode">and division_code = #{divisionCode}</if>
      <if test="null != className and '' != className">and class_name like "%"#{className,jdbcType=VARCHAR}"%"</if>
    </where>
  </select>
  <select id="BaseCategorylist" parameterType="map" resultType="map">
    SELECT division_code keyValue, division_name keyName 
    FROM lack_division
    ORDER BY keyValue
<!--     SELECT DISTINCT division_code keyValue, division_name keyName 
    FROM `goods_category` 
    WHERE division_code IS NOT NULL AND division_code !='' 
    ORDER BY division_code; -->
  </select>

</mapper>